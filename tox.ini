[tox]
envlist =
    py{37,38}-test{,-devdeps}{,-cov}
    py{37,38}-test-numpy118
    py{37,38}-test-astropy40
    build_docs
    codestyle
requires =
    setuptools >= 30.3.0
    pip >= 19.3.1
isolated_build = true

[testenv]

# Pass through the following environment variables which may be needed for the CI
passenv = HOME WINDIR LC_ALL LC_CTYPE CC CI TRAVIS

# Run the tests in a temporary directory to make sure that we don't import
# this package from the source tree
changedir = .tmp/{envname}

# tox environments are constructed with so-called 'factors' (or terms)
# separated by hyphens, e.g. test-devdeps-cov. Lines below starting with factor:
# will only take effect if that factor is included in the environment name. To
# see a list of example environments that can be run, along with a description,
# run:
#
#     tox -l -v
#
description =
    run tests
    devdeps: with the latest developer version of key dependencies
    cov: and test coverage
    numpy118: with numpy 1.18.*
    astropy40: with astropy 4.0.*

# The following provides some specific pinnings for key packages
deps =
    numpy118: numpy==1.18.*
    astropy40: astropy==4.0.*
    devdeps: git+https://github.com/numpy/numpy.git#egg=numpy
    devdeps: git+https://github.com/astropy/astropy.git#egg=astropy

# The following indicates which extras_require from setup.cfg will be installed
extras =
    test

commands =
    pip freeze
    !cov: pytest --pyargs twobody {toxinidir}/docs {posargs}
    cov: pytest --pyargs twobody {toxinidir}/docs --cov twobody --cov-config={toxinidir}/setup.cfg {posargs}

[testenv:build_docs]
changedir = docs
description = invoke sphinx-build to build the HTML docs
extras = docs
commands =
    pip freeze
    sphinx-build -W -b html . _build/html

[testenv:linkcheck]
changedir = docs
description = check the links in the HTML docs
extras = docs
commands =
    pip freeze
    sphinx-build -W -b linkcheck . _build/html

[testenv:codestyle]
skip_install = true
changedir = .
description = check code style, e.g. with flake8
deps = flake8
commands = flake8 twobody --count --max-line-length=100
