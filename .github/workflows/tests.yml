name: Test twobody
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    - cron: "0 12 * * 1"  # Mondays @ 8AM Eastern

jobs:
  tests:
    name: "py${{ matrix.python-version }} on ${{ matrix.os }}"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        include:

          - name: Python 3.9 with minimal dependencies and coverage
            os: ubuntu-latest
            python: 3.9
            toxenv: py39-test-cov

          - name: Python 3.9 dev dependencies
            os: ubuntu-latest
            python: 3.9
            toxenv: py39-test-devdeps
            toxposargs: --durations=50

          - name: Python 3.7 with oldest supported version of all dependencies
            os: ubuntu-latest
            python: 3.7
            toxenv: py37-test-oldestdeps

          # Mac and Windows:
          - name: Python 3.9 standard tests (macOS)
            os: macos-latest
            python: 3.9
            toxenv: py39-test

          - name: Python 3.9 standard tests (Windows)
            os: windows-latest
            python: 3.9
            toxenv: py39-test

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # Mac / linux:
      - name: Set up Python ${{ matrix.python-version }} on ${{ matrix.os }}
        if: "!startsWith(matrix.os, 'windows')"
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Python dependencies - nix
        if: "!startsWith(matrix.os, 'windows')"
        run: python -m pip install --upgrade tox

      # Windows:
      - uses: conda-incubator/setup-miniconda@v2
        if: startsWith(matrix.os, 'windows')
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}

      - name: Install Python dependencies - Windows
        if: startsWith(matrix.os, 'windows')
        shell: bash -l {0}
        run: |
          conda install -c conda-forge -q libpython
          python -m pip install -e .[test]
          python -m pip install tox

      # All: show Python version
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      # Run tests:
      - name: Test with tox
        run: |
          tox ${{ matrix.toxargs }} -e ${{ matrix.toxenv }} -- ${{ matrix.toxposargs }}

      # - name: Upload coverage report to codecov
      #   uses: codecov/codecov-action@v1
      #   if: success()
      #   with:
      #     file: ./coverage.xml # optional

      # - uses: actions/upload-artifact@v2
      #   if: ${{ failure() }}
      #   with:
      #     path: ./result_images

